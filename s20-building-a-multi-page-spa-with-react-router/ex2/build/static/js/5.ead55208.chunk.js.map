{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","formFocusHandler","when","message","location","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","htmlFor","type","id","onFocus","ref","rows","onClick","NewQuote","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,6B,yFCKjFC,EAJF,SAACC,GACV,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCkEjCC,EA9DG,SAACL,GACf,MAAoCM,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAiBC,mBACjBC,EAAeD,mBAYfE,EAAmB,WACrBJ,GAAc,IAOlB,OACI,sBAAKP,UAAU,WAAf,UACI,cAAC,IAAD,CAAQY,KAAMN,EAAYO,QAAS,SAACC,GAAD,MAAa,qCAChD,cAAC,EAAD,UACI,uBAAMd,UAAWC,IAAQc,KAAMC,SAtBjB,SAACC,GACvBA,EAAMC,iBACN,IAAMC,EAAgBX,EAAeY,QAAQC,MACvCC,EAAcZ,EAAaU,QAAQC,MAIzCtB,EAAMwB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAexC,UACKvB,EAAM2B,WACH,qBAAK1B,UAAWC,IAAQ0B,QAAxB,SACI,cAACC,EAAA,EAAD,MAIR,sBAAK5B,UAAU,aAAf,UACI,uBAAO6B,QAAQ,SAAf,oBACA,uBACI7B,UAAU,eACV8B,KAAK,OACLC,GAAG,SACHC,QAASrB,EACTsB,IAAKzB,OAGb,sBAAKR,UAAU,aAAf,UACI,uBAAO6B,QAAQ,OAAf,kBACA,0BACI7B,UAAU,eACV+B,GAAG,OACHG,KAAK,IACLF,QAASrB,EACTsB,IAAKvB,OAEb,qBAAKV,UAAU,cAAf,SACI,wBAAQmC,QAnCI,WAC5B5B,GAAc,IAkC4CP,UAAU,eAApD,kC,gBCvCToC,UAhBE,WACb,MAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OACfC,EAAUC,cAEhBC,qBAAU,WACS,cAAXH,GACAC,EAAQG,KAAK,aAElB,CAACJ,EAAQC,IAKZ,OAAO,cAAC,EAAD,CAAWf,UAAsB,YAAXc,EAAsBjB,WAH3B,SAACsB,GACrBN,EAAYM","file":"static/js/5.ead55208.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__mI4Mc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__13ZWw\",\"loading\":\"QuoteForm_loading__aGyRp\",\"actions\":\"QuoteForm_actions__jBEXc\"};","import classes from './Card.module.css'\n\nconst Card = (props) => {\n    return <div className={classes.card}>{props.children}</div>\n}\n\nexport default Card\n","import { useRef, useState } from 'react'\nimport { Prompt } from 'react-router-dom'\n\nimport Card from '../UI/Card'\nimport LoadingSpinner from '../UI/LoadingSpinner'\nimport classes from './QuoteForm.module.css'\n\nconst QuoteForm = (props) => {\n    const [isEntering, setIsEntering] = useState(false)\n    const authorInputRef = useRef()\n    const textInputRef = useRef()\n\n    const submitFormHandler = (event) => {\n        event.preventDefault()\n        const enteredAuthor = authorInputRef.current.value\n        const enteredText = textInputRef.current.value\n\n        // optional: Could validate here\n\n        props.onAddQuote({ author: enteredAuthor, text: enteredText })\n    }\n\n    const formFocusHandler = () => {\n        setIsEntering(true)\n    }\n\n    const finishedEnteringHandler = () => {\n        setIsEntering(false)\n    }\n\n    return (\n        <div className='newquote'>\n            <Prompt when={isEntering} message={(location) =>'Are you sure you want to leave?'} />\n            <Card>\n                <form className={classes.form} onSubmit={submitFormHandler}>\n                    {props.isLoading && (\n                        <div className={classes.loading}>\n                            <LoadingSpinner />\n                        </div>\n                    )}\n\n                    <div className='form-group'>\n                        <label htmlFor='author'>Author</label>\n                        <input\n                            className='form-control'\n                            type='text'\n                            id='author'\n                            onFocus={formFocusHandler}\n                            ref={authorInputRef}\n                        />\n                    </div>\n                    <div className='form-group'>\n                        <label htmlFor='text'>Text</label>\n                        <textarea\n                            className='form-control'\n                            id='text'\n                            rows='5'\n                            onFocus={formFocusHandler}\n                            ref={textInputRef}></textarea>\n                    </div>\n                    <div className='formactions'>\n                        <button onClick={finishedEnteringHandler} className='btn btn-info'>Add Quote</button>\n                    </div>\n                </form>\n            </Card>\n        </div>\n    )\n}\n\nexport default QuoteForm\n","import { useEffect } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport QuoteForm from '../components/quotes/QuoteForm'\r\nimport useHttp from '../hooks/use-http'\r\nimport { addQuote } from '../lib/api'\r\n\r\nconst NewQuote = () => {\r\n    const { sendRequest, status } = useHttp(addQuote)\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (status === 'completed') {\r\n            history.push('/quotes')\r\n        }\r\n    }, [status, history])\r\n\r\n    const addQuoteHandler = (quoteData) => {\r\n        sendRequest(quoteData)\r\n    }\r\n    return <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\r\n}\r\n\r\nexport default NewQuote\r\n"],"sourceRoot":""}